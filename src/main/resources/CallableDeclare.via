import A;
import B;
;
enum E{
    A;

    public alias X = A;
    public alias A = A, B = Y, C = Z;
    public alias N = M = A; // 可
}

class ObjectExample{
    // public abstract A<int>(int a);
    public String a = "";
    public String x = a.substring(1,2);
    public float8 f1 = 1.9e3;
    public float8 f2 = 1.9E32;
    public float8 f3 = 1.e3e;
    public float8 f4 = 1.e3E;
    public float8 f5 = 1.E3E;
}
abstract class Mmm{
    public abstract A<int>(int a);
}
public alias X = A;
public alias Z = A, A = Y, Y = Z;
// public alias Z,M = A; // 报错
public alias L = M = A; // 可
public alias N<T1,T2> = A<T1,T2,T1>; // 可


public void func1(){}    // void     func        ()
public void func2<T>(){} // void     func    <T> ()
public List<Integer> func2<T>(){} // void     func    <T> ()
public (int,int,Integer) func2<T>(){} // void     func    <T> ()

public func3(){}         // func                 ()
public func4<T>(){}      // func<T>              ()
public func5<T>()(){}    // func<T>   ()         ()
public func5<T>()<T>(){} // func<T>   ()     <T> ()

int +(){}               // int       +          ()

public /*static*/ abstract class AbstractType{}

public void a(){};
// public (void_) a(){};
public (void_) a(){};